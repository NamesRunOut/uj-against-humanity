{"version":3,"sources":["hooks/Socket.js","components/molecules/Scoreboard.js","components/molecules/Chat.js","components/molecules/Actions.js","components/organisms/info.js","components/atoms/StartButton.js","components/molecules/Points.js","hooks/Settings.js","components/atoms/DragButton.js","components/organisms/navbar.js","hooks/CardsPlayed.js","functions/playedCards.js","components/atoms/BlackCard.js","components/atoms/Placeholders.js","components/atoms/CommitedCard.js","components/molecules/CardsPlayed.js","components/organisms/main.js","hooks/PlayerCards.js","components/atoms/Loader.js","components/atoms/WhiteCard.js","components/atoms/Blocker.js","components/organisms/cards.js","pages/Homepage.js","pages/404.js","App.js","index.js"],"names":["client","io","SocketContext","createContext","Socket","props","useState","socket","Provider","value","children","Scoreboard","players","motion","div","id","length","map","player","span","className","name","status","points","style","opacity","marginLeft","Chat","chat","writeMessage","message","date","author","sauce","placeholder","aria-label","type","onClick","Actions","useContext","canSkip","setCanSkip","emit","setTimeout","Info","close","AnimatePresence","initial","x","animate","exit","transition","duration","delay","pointerEvents","layout","button","StartButton","response","disabled","Points","defaultValue","number","document","getElementById","SettingsContext","undefined","Settings","canDrag","setCanDrag","DragButton","updateScroll","element","scrollTop","scrollHeight","Navbar","setResponse","showinfo","setShowinfo","setPlayers","setChat","sessionid","logKey","e","keyCode","useEffect","addEventListener","on","card","cardSauce","matchid","text","playerList","tmp","p","tzar","played","push","data","AnimateSharedLayout","CardsPlayedContext","CardsPlayed","cards","setCards","tmpcards","settmpcards","off","cardid","winningPlayer","i","playerName","chosen","revealed","handleHighlight","playedCards","handlePlayedCards","BlackCard","black","setBlack","Placeholders","setPlaceholder","setTmp","CommitedCard","Array","isArray","Main","PlayerCardsContext","PlayerCards","whiteCards","setWhiteCards","setMessage","loader","setLoader","canCommit","commitCount","commit","setCommit","tzarid","cardSauceid","tmpWhite","splice","Loader","item","hidden","visible","WhiteCard","commitFunction","drag","variants","whileHover","scale","Blocker","container","ease","Cards","cardCommited","nickname","Homepage","window","onload","prompt","onbeforeunload","Date","input","String","getHours","padStart","getMinutes","getSeconds","PageNotFound","location","App","exact","path","component","MissingPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.83f6fea7.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\nimport io from \"socket.io-client\";\r\n\r\nconst client = io()\r\n\r\nexport const SocketContext = createContext()\r\n\r\nconst Socket = (props) => {\r\n    const [socket] = useState(client);\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {props.children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport {Socket}","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nimport {motion, AnimatePresence} from \"framer-motion\"\r\n\r\nconst Scoreboard = ({players}) => {\r\n\r\n    return (\r\n        <motion.div id=\"scoreboard\">\r\n            {\r\n                players.length === 0 ? <></> :\r\n                    players.map(player => <motion.span key={`${player.id}1`}>\r\n                        <motion.div className=\"playerScore\">\r\n                            <motion.div>\r\n                                {player.name} {player.status}<br/>\r\n                                Points: {player.points}\r\n                                <motion.span style={{opacity: '0.2', marginLeft: '0.25em'}}>\r\n                                    [{player.id}]\r\n                                </motion.span>\r\n                            </motion.div>\r\n                        </motion.div>\r\n                        <hr/>\r\n                    </motion.span>)\r\n            }\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Scoreboard\r\n","import React, {useContext, useEffect} from \"react\"\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nimport {motion, AnimatePresence} from \"framer-motion\"\r\n\r\nconst Chat = ({chat, writeMessage}) => {\r\n    return (\r\n        <>\r\n            <motion.div>\r\n                <motion.div id=\"chatLog\">\r\n                    {chat.map(message => <p>{message.date} {message.author}: {message.sauce}</p>)}\r\n                </motion.div>\r\n            </motion.div>\r\n            <motion.div className=\"info_chat_input\">\r\n                <input id=\"chatInput\" placeholder=\"Chat\" aria-label=\"Chat\"/>\r\n                <button type=\"button\" onClick={writeMessage}>Send</button>\r\n            </motion.div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat\r\n","import React, {useContext, useState} from \"react\"\r\n\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nconst Actions = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [canSkip, setCanSkip] = useState(true)\r\n\r\n    const reroll = () => {\r\n        socket.emit('reroll');\r\n    }\r\n\r\n    const skip = () => {\r\n        if (!canSkip) return;\r\n        setCanSkip(false)\r\n        socket.emit('skipBlack');\r\n        setTimeout(function () {\r\n            setCanSkip(true)\r\n        }, 30000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" onClick={reroll}>Reroll cards</button>\r\n            <button type=\"button\" onClick={skip} id=\"skipButton\">Skip black</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Actions\r\n","import React, {useContext, useState, useEffect} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nimport Scoreboard from \"../molecules/Scoreboard\";\r\nimport Chat from \"../molecules/Chat\";\r\nimport Actions from '../molecules/Actions'\r\n\r\nimport {motion, AnimatePresence} from \"framer-motion\"\r\n\r\nconst Info = ({close, players, chat, writeMessage}) => {\r\n\r\n    return (\r\n    <AnimatePresence>\r\n         <motion.div \r\n            initial={{ opacity: 0, x: -200 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            exit={{ opacity: 0, x: -200}}\r\n            transition={{ duration: 0.2, delay: 0 }}\r\n            style={{ pointerEvents: \"auto\" }}\r\n            className=\"overlay\"\r\n            layout>\r\n                <Actions />\r\n                <motion.div className=\"info_score\">\r\n                    <motion.div className=\"title\">Scoreboard\r\n                        <hr/>\r\n                    </motion.div>\r\n                    <Scoreboard players={players} />\r\n                </motion.div>\r\n                <motion.div className=\"info_chat\">\r\n                    <Chat chat={chat} writeMessage={writeMessage} />\r\n                </motion.div>\r\n                <motion.button onClick={() => close()}>\r\n                Close\r\n            </motion.button>\r\n            </motion.div>\r\n    </AnimatePresence>\r\n    );\r\n}\r\n\r\nexport default Info\r\n","import React, {useContext} from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nconst StartButton = ({response}) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const startGame = () => {\r\n        socket.emit('start');\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" id=\"startButton\" onClick={startGame} disabled={response}>START</button>\r\n    );\r\n}\r\n\r\nexport default StartButton\r\n","import React, {useContext} from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nconst Points = ({response}) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const setPoints = () => {\r\n        let number = document.getElementById(\"pointsInput\")?.value || 5\r\n        if (number) socket.emit('setPoints', number)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar_points\">\r\n            Score limit:\r\n            <select id=\"pointsInput\" defaultValue='5'>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"10\">10</option>\r\n            </select>\r\n            <div>\r\n                <button type=\"button\" id=\"pointsButton\" onClick={setPoints} disabled={response}>Select</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Points\r\n","import React, {createContext, useState} from 'react'\r\n\r\nexport const SettingsContext = createContext([false, undefined])\r\n\r\nconst Settings = (props) => {\r\n    const [canDrag, setCanDrag] = useState(false)\r\n\r\n    return (\r\n        <SettingsContext.Provider value={[canDrag, setCanDrag]}>\r\n            {props.children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport {Settings}\r\n","import React, {useContext} from \"react\";\r\nimport {SettingsContext} from \"../../hooks/Settings\";\r\n\r\nconst DragButton = () => {\r\n    const [canDrag, setCanDrag] = useContext(SettingsContext)\r\n\r\n    return (\r\n        <div className=\"navbar_decks\">\r\n            <button onClick={() => setCanDrag((canDrag) => !canDrag)}>Drag\r\n                cards {canDrag ? 'ON' : 'OFF'}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DragButton\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport {AnimateSharedLayout} from \"framer-motion\"\r\n\r\nimport Info from './info'\r\n\r\nimport {SocketContext} from '../../hooks/Socket'\r\nimport StartButton from \"../atoms/StartButton\";\r\nimport Points from \"../molecules/Points\";\r\nimport DragButton from \"../atoms/DragButton\";\r\nimport Actions from \"../molecules/Actions\";\r\n\r\nconst updateScroll = () => {\r\n    let element = document.getElementById(\"chatLog\")\r\n    if (element !== null) element.scrollTop = element.scrollHeight;\r\n}\r\n\r\nconst Navbar = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [response, setResponse] = useState(false)\r\n    const [showinfo, setShowinfo] = useState(false)\r\n    const [players, setPlayers] = useState([])\r\n    const [chat, setChat] = useState([])\r\n\r\n    let sessionid = \"not\"\r\n\r\n    function logKey(e) {\r\n        if (e.keyCode === 13) {\r\n            writeMessage();\r\n        }\r\n    }\r\n\r\n    const writeMessage = () => {\r\n        let element\r\n        element = (document.getElementById(\"chatInput\"))\r\n        if (element !== null) {\r\n            socket.emit('message', element.value);\r\n            element.value = \"\";\r\n        }\r\n        updateScroll();\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', logKey)\r\n\r\n        socket.on('message', function (message) {\r\n            //displayMessage(message);\r\n            setChat(chat => [...chat, message])\r\n            updateScroll();\r\n        })\r\n        socket.on('recieveWhite', function (id, card, cardSauce) {\r\n            setChat(chat => [...chat, {\r\n                date: '',\r\n                author: \"white card\",\r\n                sauce: \"[\" + card.matchid + \"] \" + cardSauce.text\r\n            }])\r\n            updateScroll();\r\n            /*displayMessage({\r\n                date: '',\r\n                author: \"white card\",\r\n                sauce: \"[\" + card.matchid + \"] \" + cardSauce.text\r\n            });*/\r\n        })\r\n\r\n        socket.on('sessionid', function (id) {\r\n            sessionid = id\r\n        });\r\n        socket.on('state', function (playerList, players) {\r\n            let tmp = []\r\n            for (let id in playerList) {\r\n                let p = players[playerList[id]]\r\n                let name = p.name\r\n                if (p.id === sessionid) name += \" (you)\"\r\n                let status = \"\"\r\n                if (p.tzar) status = \"tzar\"\r\n                else if (!p.played) status = \"playing...\"\r\n                tmp.push({\r\n                    name: name,\r\n                    status: status,\r\n                    points: p.points,\r\n                    id: playerList[id]\r\n                })\r\n            }\r\n            setPlayers([...tmp])\r\n        })\r\n\r\n        socket.on(\"startEnable\", function (data) {\r\n            setResponse(false)\r\n        })\r\n        socket.on(\"startDisable\", function (data) {\r\n            setResponse(true)\r\n        })\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div className=\"navbar\" id=\"player\">\r\n            <StartButton response={response}/>\r\n            <Points response={response}/>\r\n            <DragButton/>\r\n            <AnimateSharedLayout type=\"crossfade\">\r\n                {showinfo && <Info close={() => setShowinfo(false)} players={players} chat={chat} writeMessage={writeMessage} />}\r\n            </AnimateSharedLayout>\r\n            <button onClick={() => setShowinfo(showinfo => !showinfo)}>Open info</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar\r\n","import React, {createContext, useContext, useEffect, useState} from 'react'\r\nimport {SocketContext} from \"./Socket\";\r\nimport {handleHighlight, handlePlayedCards} from \"../functions/playedCards\";\r\n\r\nexport const CardsPlayedContext = createContext([[],])\r\n\r\nconst CardsPlayed = (props) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const [cards, setCards] = useState([])\r\n    const [tmpcards, settmpcards] = useState([])\r\n\r\n    useEffect(() => {\r\n        setCards([...tmpcards])\r\n    }, [tmpcards])\r\n\r\n    useEffect(() => {\r\n        socket.off('highlightCard').on('highlightCard', (cardid, players) => handleHighlight(cardid, players, cards, settmpcards))\r\n    }, [cards])\r\n\r\n    useEffect(() => {\r\n        socket.on('playedCards', (playedCards, type) => handlePlayedCards(playedCards, settmpcards))\r\n    }, [])\r\n\r\n    return (\r\n        <CardsPlayedContext.Provider value={[cards, setCards]}>\r\n            {props.children}\r\n        </CardsPlayedContext.Provider>\r\n    )\r\n}\r\n\r\nexport {CardsPlayed}\r\n","export const handleHighlight = (cardid, players, cards, settmpcards) => {\r\n    if (cards.length === 0) return\r\n\r\n    let winningPlayer = {id: 'unknown', name: 'unknown'}\r\n    let tmp = []\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n        if (cards[i].matchid === cardid) {\r\n            winningPlayer = {id: cards[i].player, name: players[cards[i].player].name}\r\n            break\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n        tmp.push({\r\n            card: cards[i].card,\r\n            matchid: cards[i].matchid,\r\n            player: cards[i].player,\r\n            playerName: players[cards[i].player].name,\r\n            chosen: cards[i].player !== winningPlayer.id,\r\n            revealed: true\r\n        })\r\n    }\r\n    settmpcards([...tmp])\r\n}\r\n\r\nexport const handlePlayedCards = (playedCards, settmpcards) => {\r\n    if (playedCards.length === 0) {\r\n        settmpcards([])\r\n        return\r\n    }\r\n    settmpcards([...playedCards])\r\n\r\n}\r\n","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {SocketContext} from '../../hooks/Socket'\r\n\r\nconst BlackCard = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [black, setBlack] = useState({\r\n        id: 0,\r\n        text: 'Questions will appear here, answer with one (or more) of your cards',\r\n    })\r\n\r\n    useEffect(() => {\r\n        socket.on('blackCard', (card) => {\r\n            setBlack({\r\n                id: card.id,\r\n                text: card.text\r\n            })\r\n        });\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div id=\"blackCard\">\r\n            <div className=\"biggerCard blackCard\">\r\n                {black.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlackCard\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {SocketContext} from \"../../hooks/Socket\";\r\n\r\nconst Placeholders = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [placeholder, setPlaceholder] = useState([])\r\n    const [tmp, setTmp] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (tmp !== 0) setPlaceholder([...placeholder, tmp])\r\n        else setPlaceholder([])\r\n    }, [tmp])\r\n\r\n    useEffect(() => {\r\n        socket.on('playedCardsHidden', function () {\r\n            setTmp(tmp => tmp + 1)\r\n        })\r\n        socket.on('playedCards', function (playedCards, type) {\r\n            setTmp(0)\r\n        })\r\n        socket.on('highlightCard', function (cardid, players) {\r\n            setTmp(0)\r\n        })\r\n    }, [socket]);\r\n\r\n    return (\r\n        <>\r\n            {placeholder.length > 0 ? placeholder.map(card => <div key={card} className=\"biggerCard hidden\"/>) : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Placeholders\r\n","import React, {useContext} from \"react\"\r\nimport {SocketContext} from \"../../hooks/Socket\";\r\n\r\nconst CommitedCard = ({\r\n                          card,\r\n                          playerName,\r\n                          chosen,\r\n                          revealed\r\n                      }) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const tzarPicked = (cardid) => {\r\n        if (revealed) return\r\n        socket.emit('tzarPicked', cardid);\r\n    }\r\n\r\n    return <div\r\n            key={card.matchid}\r\n            className=\"biggerCard\"\r\n            onClick={() => tzarPicked(card.matchid)}\r\n            style={{opacity: chosen ? '1' : '0.5'}}>\r\n            {card.card.text} {revealed ? `[${playerName}]` : ''}\r\n        </div>\r\n}\r\n\r\nexport default CommitedCard\r\n","import React, {useContext} from \"react\";\r\nimport Placeholders from \"../atoms/Placeholders\";\r\nimport CommitedCard from \"../atoms/CommitedCard\";\r\nimport {CardsPlayedContext} from \"../../hooks/CardsPlayed\";\r\n\r\nconst CardsPlayed = () => {\r\n    const [cards] = useContext(CardsPlayedContext)\r\n\r\n    return (\r\n        <div id=\"cards\">\r\n            <Placeholders/>\r\n            {cards.length === 0 ? <></> :\r\n                cards.map(\r\n                    (element) => {\r\n                        if (!Array.isArray(element))\r\n                            return <CommitedCard\r\n                                key={element.matchid}\r\n                                card={element}\r\n                                chosen={!element.chosen}\r\n                                revealed={element.revealed || false}\r\n                                playerName={element.playerName || ''}/>\r\n                    }\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardsPlayed\r\n","import React from \"react\";\r\nimport {CardsPlayed} from \"../../hooks/CardsPlayed\";\r\n\r\nimport BlackCard from \"../atoms/BlackCard\";\r\nimport CardsPlayedComponent from \"../molecules/CardsPlayed\";\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <div className=\"mainArea\">\r\n            <BlackCard/>\r\n            <div>\r\n                <CardsPlayed>\r\n                    <CardsPlayedComponent/>\r\n                </CardsPlayed>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React, {createContext, useContext, useEffect, useState} from 'react'\r\nimport {SocketContext} from \"./Socket\";\r\n\r\nexport const PlayerCardsContext = createContext([])\r\n\r\nconst PlayerCards = (props) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const [whiteCards, setWhiteCards] = useState([])\r\n    const [message, setMessage] = useState(null)\r\n    const [loader, setLoader] = useState(false)\r\n\r\n    const [commit, setCommit] = useState({\r\n        canCommit: true,\r\n        commitCount: 0\r\n    })\r\n\r\n    const [tmp, setTmp] = useState({\r\n        card: {\r\n            cardid: -1,\r\n            matchid: -1\r\n        },\r\n        sauce: {\r\n            id: -1,\r\n            text: \"Example Card\",\r\n        }\r\n    })\r\n\r\n    const cardCommited = (cardid, cardSauceid) => {\r\n        let tmpWhite = [...whiteCards]\r\n        if (tmpWhite.length === 0 || !commit.canCommit) return\r\n\r\n        if (commit.commitCount >= 0)\r\n            setCommit({\r\n                canCommit: false,\r\n                commitCount: commit.commitCount\r\n            })\r\n        else\r\n            setCommit({\r\n                canCommit: commit.canCommit,\r\n                commitCount: commit.commitCount + 1\r\n            })\r\n\r\n        for (let i = 0; i < tmpWhite.length; i++) {\r\n            if (tmpWhite[i].card === undefined) {\r\n                tmpWhite.splice(i, 1)\r\n                continue\r\n            }\r\n            if (cardid === tmpWhite[i].card.matchid)\r\n                tmpWhite.splice(i, 1)\r\n        }\r\n        setWhiteCards([...tmpWhite])\r\n        socket.emit('cardCommited', cardid, cardSauceid);\r\n    }\r\n\r\n    useEffect(() => {\r\n        tmp.card.matchid !== -1 && setWhiteCards([...whiteCards, tmp])\r\n    }, [tmp]);\r\n\r\n    useEffect(() => {\r\n        socket.on('recieveWhite', function (id, card, cardSauce) {\r\n            setTmp({card: card, sauce: cardSauce})\r\n        })\r\n\r\n        socket.on('loadloader', function (number) {\r\n            setLoader(true)\r\n            setMessage(null)\r\n        })\r\n\r\n        socket.on('unloadloader', function (number) {\r\n            setLoader(false)\r\n        })\r\n\r\n        socket.on('tzarTurn', function () {\r\n            setMessage('You are the tzar, pick a card')\r\n            setCommit({\r\n                canCommit: false,\r\n                commitCount: commit.commitCount\r\n            })\r\n        })\r\n\r\n        socket.on('playerWait', function () {\r\n            setMessage('Tzar is picking a card')\r\n            setCommit({\r\n                canCommit: false,\r\n                commitCount: commit.commitCount\r\n            })\r\n        })\r\n\r\n        socket.on('blockTzar', function (tzarid) {\r\n            setMessage('You are the tzar')\r\n            setCommit({\r\n                canCommit: false,\r\n                commitCount: commit.commitCount\r\n            })\r\n        })\r\n\r\n        socket.on('enableCards', function () {\r\n            setMessage(null)\r\n            setCommit({\r\n                canCommit: true,\r\n                commitCount: 0\r\n            })\r\n        })\r\n\r\n        socket.on('clearBoard', function () {\r\n            setWhiteCards([])\r\n        })\r\n\r\n        socket.on(\"startDisable\", function (data) {\r\n            setCommit({\r\n                canCommit: true,\r\n                commitCount: 0\r\n            })\r\n        })\r\n    }, [socket]);\r\n\r\n    return (\r\n        <PlayerCardsContext.Provider value={[whiteCards, setWhiteCards, loader, message, cardCommited]}>\r\n            {props.children}\r\n        </PlayerCardsContext.Provider>\r\n    )\r\n}\r\n\r\nexport {PlayerCards}\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loaderWrapper\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"dot dot1\"/>\r\n                <div className=\"dot dot2\"/>\r\n                <div className=\"dot dot3\"/>\r\n                <div className=\"dot dot4\"/>\r\n                <div className=\"dot dot5\"/>\r\n                <div className=\"dot dot6\"/>\r\n                <div className=\"dot dot7\"/>\r\n                <div className=\"dot dot8\"/>\r\n                <div className=\"dot dot9\"/>\r\n                <div className=\"dot dot10\"/>\r\n                <div className=\"dot dot11\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, {useContext} from \"react\"\r\nimport {motion} from \"framer-motion\"\r\nimport {SettingsContext} from \"../../hooks/Settings\";\r\n\r\nconst item = {\r\n    hidden: {x: 100, opacity: 0},\r\n    visible: {\r\n        x: 0,\r\n        opacity: 1\r\n    }\r\n}\r\n\r\nconst WhiteCard = ({card, commitFunction}) => {\r\n    const [canDrag] = useContext(SettingsContext)\r\n\r\n    if (card === undefined || card.sauce === undefined || card.card === undefined) return <></>\r\n    return (\r\n        <motion.div\r\n            drag={!!canDrag}\r\n            layout\r\n            className='card'\r\n            variants={item}\r\n            whileHover={{scale: 1.1}}\r\n            onClick={() => commitFunction(card.card.matchid, card.sauce.id)}>\r\n            {card.sauce.text} [{card.card.matchid}]\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default WhiteCard\r\n","import React from \"react\"\r\n\r\nconst Blocker = ({message}) => {\r\n    return (\r\n        <div id=\"blocker\"><h2>{message}</h2></div>\r\n    )\r\n}\r\n\r\nexport default Blocker\r\n","import React, {useContext} from \"react\";\r\n\r\nimport {motion} from \"framer-motion\"\r\n\r\nimport {PlayerCardsContext} from \"../../hooks/PlayerCards\";\r\nimport Loader from \"../atoms/Loader\";\r\nimport WhiteCardComponent from \"../atoms/WhiteCard\";\r\nimport Blocker from \"../atoms/Blocker\";\r\n\r\nconst container = {\r\n    transition: {\r\n        ease: \"easeIn\",\r\n        duration: 1\r\n    }\r\n};\r\n\r\nconst Cards = () => {\r\n    const [whiteCards, , loader, message, cardCommited] = useContext(PlayerCardsContext)\r\n    return (\r\n        <motion.div\r\n            layout\r\n            id=\"yourCards\"\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={container}\r\n        >\r\n            {loader && <Loader/>}\r\n            {message !== null && <Blocker message={message}/>}\r\n            {whiteCards?.map(card => <WhiteCardComponent\r\n                key={card?.card?.matchid || 'temp'}\r\n                card={card}\r\n                commitFunction={cardCommited}/>)}\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import React, {useContext} from 'react';\r\n\r\nimport Navbar from '../components/organisms/navbar'\r\nimport Main from '../components/organisms/main'\r\nimport Cards from '../components/organisms/cards'\r\n\r\nimport {SocketContext} from '../hooks/Socket'\r\nimport {PlayerCards} from '../hooks/PlayerCards'\r\nimport {Settings} from \"../hooks/Settings\"\r\n\r\nlet nickname = \"unknown\";\r\n\r\nconst Homepage = () => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    window.onload = function () {\r\n        socket.emit('new player');\r\n        nickname = prompt(\"Please enter your nickname\", \"\") || \"unknown\";\r\n        socket.emit('updateName', nickname);\r\n    };\r\n\r\n    window.onbeforeunload = closingCode;\r\n\r\n    function closingCode() {\r\n        let date = new Date();\r\n        let input = {\r\n            date: \"[\" + String(date.getHours()).padStart(2, \"0\") + \":\"\r\n                + String(date.getMinutes()).padStart(2, \"0\") + \":\"\r\n                + String(date.getSeconds()).padStart(2, \"0\") + \"]\",\r\n            author: nickname,\r\n            sauce: \"leaves the game\"\r\n        }\r\n        socket.emit('message', input);\r\n        socket.emit('leaverTrigger');\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id=\"wrapper\">\r\n            <Settings>\r\n                <Navbar/>\r\n                <Main/>\r\n                <PlayerCards>\r\n                   <Cards/>\r\n                </PlayerCards>\r\n            </Settings>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Homepage;\r\n","const PageNotFound = () => {\r\n    if (typeof window !== undefined) {\r\n        window.location = '/';\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default PageNotFound\r\n","import * as React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\n\nimport {AnimateSharedLayout} from \"framer-motion\"\n\nimport Homepage from './pages/Homepage'\nimport MissingPage from './pages/404'\nimport Info from './components/organisms/info'\n\nimport {Socket} from './hooks/Socket'\n\nimport './css/main.css'\n\nfunction App() {\n\n    return (\n        <Socket>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Homepage}/>\n                    <Route component={MissingPage}/>\n                </Switch>\n            </Router>\n        </Socket>\n    );\n}\n\nexport default App;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/main.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}