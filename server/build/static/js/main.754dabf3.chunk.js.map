{"version":3,"sources":["images/twitter.svg","images/gmail.svg","components/atoms/Contact.js","components/molecules/Actions.js","components/molecules/Scoreboard.js","components/molecules/Chat.js","components/organisms/info.js","hooks/Socket.js","components/atoms/StartButton.js","components/molecules/Points.js","components/molecules/Decks.js","components/organisms/navbar.js","hooks/BlackCard.js","functions/playedCards.js","hooks/CardsPlayed.js","components/atoms/BlackCard.js","components/atoms/Placeholders.js","components/atoms/CommitedCard.js","components/molecules/CardsPlayed.js","components/organisms/main.js","hooks/PlayerCards.js","components/atoms/Loader.js","components/atoms/WhiteCard.js","components/atoms/Blocker.js","components/organisms/cards.js","pages/Homepage.js","pages/Contact.js","pages/404.js","App.js","serviceWorker.js","index.js","images/github.svg"],"names":["module","exports","Contact","className","href","target","rel","src","github","alt","twitter","to","gmail","BlackCard","socket","useContext","SocketContext","useState","setCanSkip","type","onClick","emit","setTimeout","id","Scoreboard","players","setPlayers","sessionid","useEffect","on","playerList","tmp","p","name","status","tzar","played","push","points","length","map","player","key","style","opacity","marginLeft","updateScroll","element","document","getElementById","scrollTop","scrollHeight","displayMessage","message","msg","createElement","innerHTML","date","author","sauce","appendChild","Chat","addEventListener","e","keyCode","writeMessage","value","card","cardSauce","div1","inp1","setAttribute","but1","onclick","text","writeCustom","matchid","placeholder","aria-label","Info","Actions","client","socketIOClient","io","createContext","Socket","props","alert","Provider","children","StartButton","response","disabled","Points","defaultValue","number","Decks","decks","setDecks","cat","i","deck","checked","onChange","event","parseFloat","changeDecks","htmlFor","Navbar","setResponse","data","BlackCardContext","blackType","setBlackType","CardsPlayedContext","CardsPlayed","cards","setCards","tmpcards","settmpcards","off","cardid","console","log","winningPlayer","playerName","chosen","revealed","j","box","handleHighlight","playedCards","inputArr","n","current","insertionSort","handlePlayedCards","black","setBlack","Placeholders","setPlaceholder","setTmp","CommitedCard","tzarPicked","backgroundImage","Main","PlayerCardsContext","PlayerCards","whiteCards","setWhiteCards","setMessage","loader","setLoader","canCommit","tzarid","cardSauceid","tmpWhite","undefined","splice","Loader","WhiteCard","commitFunction","Blocker","Cards","cardCommited","nickname","Homepage","window","onload","username","cname","ca","cookie","split","c","charAt","substring","indexOf","getCookie","prompt","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","setCookie","checkCookie","onbeforeunload","input","String","getHours","padStart","getMinutes","getSeconds","Emailinput","label","useField","field","meta","htmlform","touched","error","Titleinput","Textinput","initialValues","email","title","validationSchema","Yup","nullable","min","max","onSubmit","values","setSubmitting","resetForm","body","sender","fetch","method","JSON","stringify","headers","then","isSubmitting","PageNotFound","location","App","exact","path","component","MissingPage","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.754dabf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.8b423d11.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.98442520.svg\";","import React from \"react\"\r\nimport github from \"../../images/github.svg\";\r\nimport twitter from \"../../images/twitter.svg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport gmail from \"../../images/gmail.svg\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div className=\"contact\">\r\n            <a href=\"https://github.com/NamesRunOut\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={github} className=\"contactImage\" alt=\"github\" /></a>\r\n            <a href=\"https://twitter.com/NamesRunOut\" target=\"_blank\" rel=\"noopener noreferrer\"><img src={twitter} className=\"contactImage\" alt=\"twitter\" /></a>\r\n            <Link to=\"/contact\">\r\n                <img src={gmail} className=\"contactImage\" alt=\"mail\" />\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact","import React, {useContext, useEffect, useState} from \"react\"\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst BlackCard = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [canSkip, setCanSkip] = useState(true)\r\n\r\n    const reroll = () => {\r\n        socket.emit('reroll');\r\n    }\r\n\r\n    const vote = () => {\r\n        socket.emit('vote');\r\n    }\r\n\r\n    const skip = () => {\r\n        //if (!canSkip) return;\r\n        //setCanSkip(false)\r\n        socket.emit('skipBlack');\r\n        setTimeout(function(){\r\n            setCanSkip(true)\r\n        }, 30000)\r\n    }\r\n\r\n    return (\r\n       <>\r\n           <div className=\"info_actions_action\">\r\n               <div><button type=\"button\" onClick={reroll}>Reroll cards</button></div>\r\n               <div>Once per game you can reroll all your cards (it has to be on your turn and you can't be the tzar)</div>\r\n           </div>\r\n           <hr />\r\n           <div className=\"info_actions_action\">\r\n               <div><button type=\"button\" onClick={vote}>Points to all!</button></div>\r\n               <div>(Usable on tzar turn) If everybody in the lobby presses this button (tzar included), everyone who commited a card will be given a point</div>\r\n           </div>\r\n           <hr />\r\n           <div className=\"info_actions_action\">\r\n               <div><button type=\"button\" onClick={skip} id=\"skipButton\">Skip black</button></div>\r\n               <div>Skip the current black card (30s cooldown per person)</div>\r\n           </div>\r\n       </>\r\n    );\r\n}\r\n\r\nexport default BlackCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst Scoreboard = () => {\r\n    const socket = useContext(SocketContext)\r\n    //const [sessionid, setSessionid] = useState(\"not\")\r\n    const [players, setPlayers] = useState([])\r\n\r\n    let sessionid = \"not\"\r\n\r\n    useEffect(() => {\r\n        socket.on('sessionid', function(id) {\r\n            //setSessionid(id)\r\n            sessionid = id\r\n        });\r\n        socket.on('state', function(playerList, players) {\r\n            let tmp = []\r\n            for (let id in playerList){\r\n                let p = players[playerList[id]]\r\n                let name = p.name\r\n                //console.log('session', p.id, sessionid)\r\n                if (p.id === sessionid) name += \" (you)\"\r\n                let status = \"\"\r\n                if (p.tzar) status = \"tzar\"\r\n                else if (!p.played) status = \"playing...\"\r\n                tmp.push({\r\n                    name: name,\r\n                    status: status,\r\n                    points: p.points,\r\n                    id: playerList[id]\r\n                })\r\n            }\r\n            setPlayers([...tmp])\r\n        })\r\n    }, [socket])\r\n\r\n    return (\r\n        <div id=\"scoreboard\">\r\n            {\r\n                players.length === 0 ? <></> :\r\n                    players.map(player => <span key={`${player.id}1`}>\r\n                        <div className=\"playerScore\">\r\n                            <div>\r\n                                {player.name} {player.status}<br />\r\n                                Points: {player.points}\r\n                                <span style={{opacity: '0.2', marginLeft: '0.25em'}}>\r\n                                    [{player.id}]\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <hr  />\r\n                    </span>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scoreboard","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst updateScroll = () => {\r\n    let element = document.getElementById(\"chatLog\");\r\n    element.scrollTop = element.scrollHeight;\r\n}\r\n\r\nexport function displayMessage(message){\r\n    let msg = document.createElement(\"p\");\r\n    msg.innerHTML = message.date+\" \"+message.author+\": \"+message.sauce;\r\n    document.getElementById(\"chatLog\").appendChild(msg);\r\n    updateScroll();\r\n}\r\n\r\nexport function displayCustom(message){\r\n    document.getElementById(\"chatLog\").appendChild(message);\r\n    updateScroll();\r\n}\r\n\r\nconst Chat = () => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    document.addEventListener('keydown', logKey);\r\n    function logKey(e) {\r\n        if(e.keyCode===13) {\r\n            writeMessage();\r\n        }\r\n    }\r\n\r\n    const writeMessage = () => {\r\n        socket.emit('message', document.getElementById(\"chatInput\").value);\r\n        document.getElementById(\"chatInput\").value=\"\";\r\n    }\r\n\r\n    const writeCustom = () => {\r\n        let text = document.getElementById('customInput')?.value || '';\r\n        socket.emit(\"writeCustom\", text);\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('message', function(message) {\r\n            displayMessage(message);\r\n        })\r\n        socket.on('recieveWhite', function(id, card, cardSauce) {\r\n            if(cardSauce.type===2) {\r\n                let div1 = document.createElement(\"div\");\r\n                div1.className=\"info_chat_input\";\r\n\r\n                /*<div className=\"info_chat_input\">\r\n                  <input id=\"customInput\" placeholder=\"Tu wpisz tekst customowej karty\" aria-label=\"Tu wpisz tekst customowej karty\" />\r\n                  <button type=\"button\" onClick={writeCustom}>Send</button>\r\n                </div>*/\r\n\r\n                let inp1 = document.createElement(\"input\");\r\n                inp1.id = \"customInput\";\r\n                inp1.setAttribute(\"placeholder\", \"Tu wpisz tekst customowej karty\");\r\n                inp1.setAttribute(\"aria-label\", \"Tu wpisz tekst customowej karty\");\r\n\r\n                let but1 = document.createElement(\"button\");\r\n                but1.setAttribute(\"type\", \"button\");\r\n                but1.innerHTML = \"Send\";\r\n                but1.onclick = () => writeCustom();\r\n\r\n                div1.appendChild(inp1);\r\n                div1.appendChild(but1);\r\n\r\n                displayCustom(div1);\r\n            }\r\n\r\n            displayMessage({\r\n                date: '',\r\n                author: \"white card\",\r\n                sauce: \"[\"+card.matchid+\"] \"+cardSauce.text\r\n            });\r\n        })\r\n    }, [socket]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div id=\"chatLog\"></div>\r\n            </div>\r\n            <div className=\"info_chat_input\">\r\n                <input id=\"chatInput\" placeholder=\"Chat\" aria-label=\"Chat\" />\r\n                <button type=\"button\" onClick={writeMessage}>Send</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chat","import React from \"react\";\r\n\r\nimport Contact from \"../atoms/Contact\";\r\nimport Actions from \"../molecules/Actions\";\r\nimport Scoreboard from \"../molecules/Scoreboard\";\r\nimport Chat from \"../molecules/Chat\";\r\n\r\nconst Info = () => {\r\n  return (\r\n    <div className=\"info\">\r\n            <div className=\"info_score\">\r\n              <div className=\"title\">Scoreboard<hr /></div>\r\n              <Scoreboard />\r\n            </div>\r\n            <div className=\"info_chat\">\r\n              <Chat />\r\n            </div>\r\n            <div className=\"info_actions\">\r\n                <div className=\"title\">Actions</div>\r\n                <hr />\r\n                <Actions />\r\n                <hr />\r\n                <Contact />\r\n            </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Info","import React, {useState, createContext, useEffect} from 'react'\r\nimport socketIOClient from \"socket.io-client\";\r\nimport {displayCustom, displayMessage} from \"../components/organisms/info\";\r\nimport io from 'socket.io-client'\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:4001\"\r\nconst socketClient = socketIOClient(ENDPOINT)\r\nconst client = io()\r\n\r\nexport const SocketContext = createContext()\r\n\r\nconst Socket = (props) => {\r\n    const [socket] = useState(client);\r\n\r\n    socket.on('sessionid', (sessionid) => alert(sessionid))\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {props.children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport {Socket}","import React, { useContext } from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst StartButton = ({response}) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const startGame = () => {\r\n        socket.emit('start');\r\n    }\r\n\r\n    return (\r\n        <button type=\"button\" id=\"startButton\" onClick={() => startGame(socket)} disabled={response}>START</button>\r\n    );\r\n}\r\n\r\nexport default StartButton","import React, { useContext } from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst Points = ({response}) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const setPoints = () => {\r\n        let number = document.getElementById(\"pointsInput\").value\r\n        if (number) socket.emit('setPoints', number)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar_points\">\r\n            Score limit:\r\n            <select id=\"pointsInput\" defaultValue='5'>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"6\">6</option>\r\n                <option value=\"7\">7</option>\r\n                <option value=\"8\">8</option>\r\n                <option value=\"9\">9</option>\r\n                <option value=\"10\">10</option>\r\n            </select>\r\n            <div>\r\n                <button type=\"button\" id=\"pointsButton\" onClick={setPoints} disabled={response}>Select</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Points","import React, {useContext, useEffect, useState} from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst Decks = ({response}) => {\r\n    const socket = useContext(SocketContext)\r\n    const [decks, setDecks] = useState([])\r\n\r\n    const changeDecks = (e) => {\r\n        let {value, checked} = e\r\n        let tmp = [...decks]\r\n        for (let i=0;i<tmp.length;i++)\r\n            if (parseFloat(tmp[i].deck.id) === parseFloat(value)) {\r\n                tmp[i].checked = checked\r\n                break\r\n            }\r\n        setDecks([...tmp])\r\n    }\r\n\r\n    const sendDecks = () => {\r\n        let tmp = []\r\n        for (let i=0;i<decks.length;i++)\r\n            if (decks[i].checked)\r\n                tmp.push(decks[i].deck.id)\r\n        socket.emit('setDecks', tmp)\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('recieveCategories', function(cat){\r\n            let tmp = []\r\n            for (let i=0;i<cat.length;i++)\r\n                tmp.push({deck: cat[i], checked: true})\r\n            setDecks([...tmp])\r\n        });\r\n        //console.log(decks.length===0, response)\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div className=\"navbar_decks\">\r\n            <button id=\"deckButton\" onClick={sendDecks} disabled={decks.length===0 || response}>Decks select</button>\r\n            <div className=\"navbar_decks_content\" id=\"catplace\">\r\n                {decks.length!==0 ? decks.map(deck => <span key={deck.deck.id}>\r\n                    <input type=\"checkbox\"\r\n                           className=\"deck\"\r\n                           value={deck.deck.id}\r\n                           checked={deck.checked}\r\n                           onChange={(event) => changeDecks(event.target)} />\r\n                    <label htmlFor={deck.deck.id}>\r\n                        {deck.deck.name}\r\n                    </label>\r\n                    <br/>\r\n                </span>) : <span>Sometimes it takes a while for the API/server to start. If you can't see any decks, please reload the page after a few minutes</span>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Decks","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\nimport StartButton from \"../atoms/StartButton\";\r\nimport Points from \"../molecules/Points\";\r\nimport Decks from \"../molecules/Decks\";\r\n\r\nconst Navbar = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [response, setResponse] = useState(false)\r\n\r\n  useEffect(() => {\r\n    socket.on(\"startEnable\", data => {\r\n      setResponse(false)\r\n    })\r\n    socket.on(\"startDisable\", data => {\r\n      setResponse(true)\r\n    })\r\n  }, [socket]);\r\n\r\n  return (\r\n    <div className=\"navbar\" id=\"player\">\r\n      <StartButton response={response} />\r\n      <Points response={response} />\r\n      <Decks response={response} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar","import React, {useState, createContext, useEffect, useContext} from 'react'\r\nimport {SocketContext} from \"./Socket\";\r\n\r\nexport const BlackCardContext = createContext()\r\n\r\nconst BlackCard = (props) => {\r\n    const socket = useContext(SocketContext)\r\n    const [blackType, setBlackType] = useState(0)\r\n\r\n    useEffect(() => {\r\n        socket.on('blackCard', function(card) {\r\n            //console.log('Blackcard', card)\r\n            setBlackType(card.type)\r\n        });\r\n    }, [socket]);\r\n\r\n    return (\r\n        <BlackCardContext.Provider value={blackType}>\r\n            {props.children}\r\n        </BlackCardContext.Provider>\r\n    )\r\n}\r\n\r\nexport {BlackCard}","function insertionSort(inputArr) {\r\n    let n = inputArr.length;\r\n    for (let i = 1; i < n; i++) {\r\n        let current = inputArr[i];\r\n        let j = i-1;\r\n        while ((j > -1) && (current.player < inputArr[j].player)) {\r\n            inputArr[j+1] = inputArr[j];\r\n            j--;\r\n        }\r\n        inputArr[j+1] = current;\r\n    }\r\n    return inputArr;\r\n}\r\n\r\nexport const handleHighlight = (cardid, players, cards, setCards, settmpcards, blackType) => {\r\n    // TODO check later if rendering fine\r\n    console.log('highlight1', cards)\r\n\r\n    if (cards.length === 0) return\r\n\r\n    let winningPlayer = {id: 'unknown', name: 'unknown'}\r\n    let tmp = []\r\n\r\n    switch (blackType){\r\n        case 0:\r\n            for (let i=0;i<cards.length;i++){\r\n                if(cards[i].matchid===cardid) {\r\n                    winningPlayer = {id: cards[i].player, name: players[cards[i].player].name}\r\n                    break\r\n                }\r\n            }\r\n\r\n            for (let i=0;i<cards.length;i++){\r\n                tmp.push({\r\n                    card: cards[i].card,\r\n                    matchid: cards[i].matchid,\r\n                    player: cards[i].player,\r\n                    playerName: players[cards[i].player].name,\r\n                    chosen: cards[i].player !== winningPlayer.id,\r\n                    revealed: true\r\n                })\r\n            }\r\n            settmpcards([...tmp])\r\n            break;\r\n        case 2:\r\n        case 3:\r\n            for (let i=0;i<cards.length;i++){\r\n                for (let j=0;j<cards[i].length;j++)\r\n                if(cards[i][j].matchid===cardid) {\r\n                    winningPlayer = {id: cards[i][j].player, name: players[cards[i][j].player].name}\r\n                    break\r\n                }\r\n            }\r\n\r\n            let box = []\r\n            for (let i=0;i<cards.length;i++){\r\n                for (let j=0;j<cards[i].length;j++){\r\n                    //console.log( cards[i][j].player, winningPlayer.id,  cards[i][j].player !== winningPlayer.id)\r\n                    box.push({\r\n                        card: cards[i][j].card,\r\n                        matchid: cards[i][j].matchid,\r\n                        player: cards[i][j].player,\r\n                        playerName: players[cards[i][j].player].name,\r\n                        chosen: cards[i][j].player !== winningPlayer.id,\r\n                        revealed: true\r\n                    })\r\n                }\r\n                tmp.push(box)\r\n                box = []\r\n            }\r\n            //console.log(tmp)\r\n            settmpcards([...tmp])\r\n            break;\r\n    }\r\n}\r\n\r\nexport const handlePlayedCards = (playedCards, type, cards, setCards, settmpcards, blackType) => {\r\n    console.log('played', cards, playedCards.length, type)\r\n    if (playedCards.length === 0) {\r\n        settmpcards([])\r\n        return\r\n    }\r\n    switch (type){\r\n        case 0:\r\n            //console.log('0')\r\n            settmpcards([...playedCards])\r\n            break;\r\n        case 2:\r\n        case 3:\r\n            //console.log('2 or 3')\r\n            let played = playedCards\r\n            insertionSort(played)\r\n            let box = [played[0]]\r\n            let tmp = []\r\n            for (let i=1;i<played.length;i++){\r\n                if (played[i].player === played[i-1].player) box.push(played[i])\r\n                else {\r\n                    tmp.push(box)\r\n                    box = [played[i]]\r\n                }\r\n            }\r\n            tmp.push(box)\r\n            settmpcards([...tmp])\r\n            //console.log('setup', tmp)\r\n            break;\r\n    }\r\n}","import React, {useState, createContext, useEffect, useContext} from 'react'\r\nimport {SocketContext} from \"./Socket\";\r\nimport {BlackCardContext} from \"./BlackCard\";\r\nimport {handleHighlight, handlePlayedCards} from \"../functions/playedCards\";\r\n\r\nexport const CardsPlayedContext = createContext()\r\n\r\nconst CardsPlayed = (props) => {\r\n    const socket = useContext(SocketContext)\r\n    const blackType = useContext(BlackCardContext)\r\n\r\n    const [cards, setCards] = useState([])\r\n    const [tmpcards, settmpcards] = useState([])\r\n\r\n    useEffect(() => {\r\n        setCards([...tmpcards])\r\n    }, [tmpcards])\r\n\r\n    useEffect(() => {\r\n        socket.off('highlightCard').on('highlightCard', (cardid, players) => handleHighlight(cardid, players, cards, setCards, settmpcards, blackType))\r\n    }, [cards])\r\n\r\n    useEffect(() => {\r\n        socket.on('playedCards', (playedCards, type) => handlePlayedCards(playedCards, type, cards, setCards, settmpcards, blackType))\r\n        //socket.on('highlightCard', (cardid, players) => handleHighlight(cardid, players))\r\n    }, [])\r\n\r\n    return (\r\n        <CardsPlayedContext.Provider value={[cards, setCards]}>\r\n            {props.children}\r\n        </CardsPlayedContext.Provider>\r\n    )\r\n}\r\n\r\nexport {CardsPlayed}","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\n\r\nconst BlackCard = () => {\r\n  const socket = useContext(SocketContext)\r\n    const [black, setBlack] = useState(null)\r\n\r\n    useEffect(() => {\r\n        socket.on('blackCard', function(card) {\r\n            setBlack(card)\r\n        });\r\n    }, [socket]);\r\n\r\n  return (\r\n      <div id=\"blackCard\">\r\n          <div className=\"biggerCard blackCard\">\r\n              {black === null ? 'Questions will appear here, answer with one (or more) of your cards' : black.text}\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default BlackCard","import React, {useContext, useEffect, useState} from \"react\";\r\nimport {SocketContext} from \"../../hooks/Socket\";\r\n\r\nconst Placeholders = () => {\r\n    const socket = useContext(SocketContext)\r\n    const [placeholder, setPlaceholder] = useState([])\r\n    const [tmp, setTmp] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (tmp !== 0) setPlaceholder([...placeholder, tmp])\r\n        else setPlaceholder([])\r\n    }, [tmp])\r\n\r\n    useEffect(() => {\r\n        socket.on('playedCardsHidden', function() {\r\n            setTmp(tmp => tmp + 1)\r\n        })\r\n        socket.on('playedCards', function(playedCards, type) {\r\n            setTmp(0)\r\n        })\r\n        socket.on('highlightCard', function(cardid, players){\r\n            setTmp(0)\r\n        })\r\n    }, [socket]);\r\n\r\n    return (\r\n        <>\r\n            {placeholder.length > 0 ? placeholder.map(card => <div key={card} className=\"biggerCard hidden\" />) : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Placeholders","import React, {useContext, useEffect, useState} from \"react\"\r\nimport {SocketContext} from \"../../hooks/Socket\";\r\nimport {BlackCardContext} from \"../../hooks/BlackCard\";\r\n\r\nconst CommitedCard = ({card, player, playerName, chosen, revealed}) => {\r\n    const socket = useContext(SocketContext)\r\n\r\n    const tzarPicked = (cardid) => {\r\n        if (revealed) return\r\n        socket.emit('tzarPicked', cardid);\r\n    }\r\n\r\n    if (card.card.type===0 || card.card.type===2) {\r\n        return <div\r\n            key={card.matchid}\r\n            className=\"biggerCard\"\r\n            onClick={() => tzarPicked(card.matchid)}\r\n            style={{opacity: chosen ? '1' : '0.5'}} >\r\n            {card.card.text} {revealed ? `[${playerName}]` : ''}\r\n        </div>\r\n    } else if (card.card.type===1){\r\n        return <div\r\n            key={card.matchid}\r\n            className=\"biggerCard\"\r\n            onClick={() => tzarPicked(card.matchid)}\r\n            style={{backgroundImage: `url(${card.card.text})`, opacity: chosen ? '1' : '0.5'}}>\r\n            {revealed ? `[${playerName}]` : ''}\r\n        </div>\r\n    }\r\n    return <></>\r\n}\r\n\r\nexport default CommitedCard","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\nimport Placeholders from \"../atoms/Placeholders\";\r\nimport CommitedCard from \"../atoms/CommitedCard\";\r\nimport {CardsPlayedContext} from \"../../hooks/CardsPlayed\";\r\nimport {BlackCardContext} from \"../../hooks/BlackCard\";\r\n\r\n// TODO blocking from commiting more cards\r\n\r\nconst CardsPlayed = () => {\r\n    const [cards] = useContext(CardsPlayedContext)\r\n    const blackType = useContext(BlackCardContext)//useState(null)\r\n\r\n    // TODO unique keys for 2/3 cards display\r\n    // TODO check later if rendering fine\r\n\r\n    return (\r\n        <div id=\"cards\">\r\n            <Placeholders />\r\n            {cards.length === 0 ? <></> :\r\n                cards.map(\r\n                    element => {\r\n                        switch(blackType){\r\n                            case 0:\r\n                                return <CommitedCard key={element.matchid} card={element} chosen={!element.chosen} revealed={element.revealed || false} playerName={'jhg'} player={element.player || 'unknown'} />\r\n                            case 2:\r\n                            case 3:\r\n                                let i=0\r\n                                return <div key={`${i++}box`} className=\"box\">\r\n                                    {element.map(box => {\r\n                                        return <CommitedCard key={`${box.matchid}${i++}`} card={box} chosen={!box.chosen} revealed={box.revealed || false} playerName={'jhg'} player={box.player || 'unknown'} />\r\n                                    })}\r\n                                </div>\r\n                        }\r\n                    }\r\n                )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardsPlayed","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport {SocketContext} from '../../hooks/Socket.js'\r\nimport {CardsPlayed} from \"../../hooks/CardsPlayed\";\r\n\r\nimport BlackCard from \"../atoms/BlackCard\";\r\nimport CardsPlayedDiv from \"../molecules/CardsPlayed\";\r\nimport {BlackCardContext} from \"../../hooks/BlackCard\";\r\n\r\nconst Main = () => {\r\n\r\n  return (\r\n    <div className=\"mainArea\">\r\n        <BlackCard />\r\n        <div>\r\n            <CardsPlayed>\r\n                <CardsPlayedDiv />\r\n            </CardsPlayed>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, {useState, createContext, useEffect, useContext} from 'react'\r\nimport {displayCustom, displayMessage} from \"../components/molecules/Chat\";\r\nimport {SocketContext} from \"./Socket\";\r\nimport {BlackCardContext} from \"./BlackCard\";\r\n\r\nexport const PlayerCardsContext = createContext()\r\n\r\nconst PlayerCards = (props) => {\r\n  const blackType = useContext(BlackCardContext)\r\n  const socket = useContext(SocketContext)\r\n\r\n  const [whiteCards, setWhiteCards] = useState([])\r\n  const [message, setMessage] = useState(null)\r\n  const [loader, setLoader] = useState(false)\r\n\r\n  const [canCommit, setCanCommit] = useState(true) // TODO false later\r\n\r\n  const [tmp, setTmp] = useState([])\r\n\r\n  const cardCommited = (cardid, cardSauceid) => {\r\n    let tmpWhite = [...whiteCards]\r\n    if (tmpWhite.length === 0 || !canCommit) return\r\n    //console.log('white', tmpWhite)\r\n    //setCanCommit(false)\r\n    for (let i=0;i<tmpWhite.length;i++){\r\n      if (tmpWhite[i].card === undefined) {\r\n        tmpWhite.splice(i, 1)\r\n        continue\r\n      }\r\n      if (cardid===tmpWhite[i].card.matchid)\r\n        tmpWhite.splice(i, 1)\r\n    }\r\n    setWhiteCards([...tmpWhite])\r\n    socket.emit('cardCommited', cardid, cardSauceid);\r\n  }\r\n\r\n  useEffect(() => {\r\n    tmp !== [] && setWhiteCards([...whiteCards, tmp])\r\n  }, [tmp]);\r\n\r\n  useEffect(() => {\r\n    socket.on('recieveWhite', function(id, card, cardSauce) {\r\n      setTmp({card: card, sauce: cardSauce})\r\n\r\n      /*if(cardSauce.type===2) {\r\n        let div1 = document.createElement(\"div\");\r\n        div1.className=\"info_chat_input\";\r\n\r\n        /*<div className=\"info_chat_input\">\r\n          <input id=\"customInput\" placeholder=\"Tu wpisz tekst customowej karty\" aria-label=\"Tu wpisz tekst customowej karty\" />\r\n          <button type=\"button\" onClick={writeCustom}>Send</button>\r\n        </div>*/\r\n\r\n        /*let inp1 = document.createElement(\"input\");\r\n        inp1.id = \"customInput\";\r\n        inp1.setAttribute(\"placeholder\", \"Tu wpisz tekst customowej karty\");\r\n        inp1.setAttribute(\"aria-label\", \"Tu wpisz tekst customowej karty\");\r\n\r\n        let but1 = document.createElement(\"button\");\r\n        but1.setAttribute(\"type\", \"button\");\r\n        but1.innerHTML = \"Send\";\r\n        but1.onclick = () => writeCustom();\r\n\r\n        div1.appendChild(inp1);\r\n        div1.appendChild(but1);\r\n\r\n        displayCustom(div1);\r\n      }\r\n\r\n      displayMessage({\r\n        date: '',\r\n        author: \"white card\",\r\n        sauce: \"[\"+card.matchid+\"] \"+cardSauce.text\r\n      });*/\r\n    })\r\n\r\n    socket.on('loadloader', function(number) {\r\n      setLoader(true)\r\n    })\r\n\r\n    socket.on('unloadloader', function(number) {\r\n      setLoader(false)\r\n    })\r\n\r\n    socket.on('tzarTurn', function() {\r\n      setMessage('You are the tzar, pick a card')\r\n    })\r\n\r\n    socket.on('playerWait', function() {\r\n      setMessage('Tzar is picking a card')\r\n      //setCanCommit(false)\r\n    })\r\n\r\n    socket.on('blockTzar', function(tzarid) {\r\n      setMessage('You are the tzar')\r\n    })\r\n\r\n    socket.on('enableCards', function() {\r\n      setMessage(null)\r\n    })\r\n\r\n    socket.on('clearBoard', function() {\r\n      setWhiteCards([])\r\n    })\r\n  }, [socket]);\r\n\r\n  return (\r\n    <PlayerCardsContext.Provider value={[whiteCards, setWhiteCards, loader, message, cardCommited]}>\r\n      {props.children}\r\n    </PlayerCardsContext.Provider>\r\n  )\r\n}\r\n\r\nexport {PlayerCards}","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loaderWrapper\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"dot dot1\"></div>\r\n                <div className=\"dot dot2\"></div>\r\n                <div className=\"dot dot3\"></div>\r\n                <div className=\"dot dot4\"></div>\r\n                <div className=\"dot dot5\"></div>\r\n                <div className=\"dot dot6\"></div>\r\n                <div className=\"dot dot7\"></div>\r\n                <div className=\"dot dot8\"></div>\r\n                <div className=\"dot dot9\"></div>\r\n                <div className=\"dot dot10\"></div>\r\n                <div className=\"dot dot11\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from \"react\"\r\n\r\nconst WhiteCard = ({card, commitFunction}) => {\r\n    if (card.sauce === undefined || card.card === undefined) return <></>\r\n    return (\r\n        <div className='card'\r\n             onClick={() => commitFunction(card.card.matchid, card.sauce.id)}\r\n             style={{backgroundImage: card.sauce.type === 1 ? `url(${card.sauce.text})` : ''}}>\r\n            {(card.sauce.type === 0 || card.sauce.type === 2) ? `${card.sauce.text} [${card.card.matchid}]` : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhiteCard","import React from \"react\"\r\n\r\nconst Blocker = ({message}) => {\r\n    return (\r\n        <div id=\"blocker\"><h2>{message}</h2></div>\r\n    )\r\n}\r\n\r\nexport default Blocker","import React, {useContext, useState} from \"react\";\r\n\r\nimport {PlayerCardsContext} from \"../../hooks/PlayerCards\";\r\nimport Loader from \"../atoms/Loader\";\r\nimport WhiteCard from \"../atoms/WhiteCard\";\r\nimport Blocker from \"../atoms/Blocker\";\r\n\r\nconst Cards = () => {\r\n  const [whiteCards, , loader, message, cardCommited] = useContext(PlayerCardsContext)\r\n\r\n  return (\r\n    <div id=\"yourCards\">\r\n      {loader && <Loader />}\r\n      {message !== null && <Blocker message={message} />}\r\n      {whiteCards?.map(card => <WhiteCard key={card?.card?.matchid || 'temp'} card={card} commitFunction={cardCommited} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import React, {useContext} from 'react';\r\n\r\nimport Navbar from '../components/organisms/navbar.js'\r\nimport Main from '../components/organisms/main.js'\r\nimport Cards from '../components/organisms/cards.js'\r\nimport Info from '../components/organisms/info.js'\r\n\r\nimport {SocketContext} from '../hooks/Socket.js'\r\nimport {PlayerCards} from '../hooks/PlayerCards.js'\r\nimport {CardsPlayed} from \"../hooks/CardsPlayed\";\r\nimport {BlackCard} from \"../hooks/BlackCard\";\r\n\r\nlet nickname = \"unknown\";\r\n\r\nexport function getCookie(cname) {\r\n  var name = cname + \"=\";\r\n  var ca = document.cookie.split(';');\r\n  for(var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nconst Homepage = () => {\r\n  const socket = useContext(SocketContext)\r\n\r\n  window.onload = function() {\r\n    socket.emit('new player');\r\n    checkCookie();\r\n  };\r\n  \r\n  window.onbeforeunload = closingCode;\r\n  function closingCode(){\r\n    let date = new Date();\r\n    let input = {\r\n      date: \"[\"+String(date.getHours()).padStart(2,\"0\")+\":\"\r\n      +String(date.getMinutes()).padStart(2,\"0\")+\":\"\r\n      +String(date.getSeconds()).padStart(2,\"0\")+\"]\",\r\n      author: nickname,\r\n      sauce: \"leaves the game\"\r\n    }\r\n    socket.emit('disconnect');\r\n    socket.emit('message', input);\r\n    socket.emit('leaverTrigger');\r\n    return null;\r\n  }\r\n\r\n  function checkCookie() {\r\n    var username = getCookie(\"username\");\r\n    if (username !== \"\") {\r\n     socket.emit('updateName', username);\r\n     nickname = username;\r\n    } else {\r\n      username = prompt(\"Please enter your nickname\", \"\");\r\n      socket.emit('updateName', username);\r\n      if (username !== \"\" && username !== null && username!==undefined) {\r\n          setCookie(\"username\", username, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setCookie(cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\"+d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  }\r\n\r\n  return (\r\n      <div id=\"wrapper\">\r\n          <Navbar />\r\n            <BlackCard>\r\n              <Main  />\r\n              <PlayerCards>\r\n                <Cards  />\r\n              </PlayerCards>\r\n          </BlackCard>\r\n          <Info />\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from 'react'\r\n\r\nimport { Formik, useField, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Emailinput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <>\r\n            <label htmlform={props.id || props.name}>{label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"form_error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Titleinput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <>\r\n            <label htmlform={props.id || props.name}>{label}</label>\r\n            <input {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"form_error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Textinput = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props)\r\n\r\n    return (\r\n        <>\r\n            <label htmlform={props.id || props.name}>{label}</label>\r\n            <textarea {...field} {...props} />\r\n            {meta.touched && meta.error ? (\r\n                <div className=\"form_error\">{meta.error}</div>\r\n            ) : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Contact = () => {\r\n\r\n    return(\r\n        <>         \r\n            <Link to=\"/\">\r\n                <button className=\"form_back\">Back</button>\r\n            </Link>\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    title: '',\r\n                    message: ''\r\n                }}\r\n\r\n                validationSchema={Yup.object({\r\n                    email: Yup.string()\r\n                        .email('Invalid email address')\r\n                        .nullable('Value is empty'),\r\n                    title: Yup.string()\r\n                        .min(3, \"The title must have at least 3 characters\")\r\n                        .max(35, \"The title is too long\")\r\n                        .nullable('Value is empty'),\r\n                    message: Yup.string()\r\n                        .min(3, \"Must have at least 3 characters\")\r\n                        .max(500, \"The message cant be longer than 500 characters\")\r\n                        .nullable('Value is empty'),\r\n                })      \r\n                }\r\n\r\n                onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                    const body = {\r\n                        sender: values.email,\r\n                        title: values.title,\r\n                        message: values.message\r\n                    }\r\n\r\n                    fetch('https://mysterious-caverns-api.herokuapp.com/mailboxes', {\r\n                    method: 'post',\r\n                    body: JSON.stringify(body),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                    })\r\n                    .then(setSubmitting(false))\r\n                    .then(resetForm())\r\n                    .then(alert(\"Message successfully submitted!\"))\r\n                }\r\n                }\r\n            >\r\n\r\n            {props => (\r\n                <div className=\"wrapper_form\">\r\n                    <Form className=\"form\">\r\n                        <h1>Contact form</h1>\r\n                        <Emailinput className=\"form_input\" label=\"Your email\" name=\"email\" type=\"email\" placeholder=\"your@email.com\" />\r\n                        <Titleinput className=\"form_input\" label=\"Title\" name=\"title\" type=\"text\" placeholder=\"Your title\" />\r\n                        <Textinput className=\"form_input--textarea\" label=\"Message\" name=\"message\" placeholder=\"Write something here!\" />\r\n                        <button className=\"form_submit\" type=\"submit\">{props.isSubmitting ? 'Sending message...' : 'Submit'}</button>\r\n                    </Form>\r\n                </div>\r\n            )}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact","const PageNotFound = () => {\r\n    if (typeof window != undefined) {\r\n        window.location = '/';\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default PageNotFound","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\n\r\nimport Homepage from './pages/Homepage'\r\nimport Contact from './pages/Contact'\r\nimport MissingPage from './pages/404'\r\n\r\nimport {Socket} from './hooks/Socket.js'\r\n\r\nimport './css/main.css'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <Socket>\r\n        <Router>\r\n          <Switch>\r\n              <Route exact path=\"/\" component={Homepage} />\r\n              <Route exact path=\"/contact\" component={Contact} />\r\n              <Route component={MissingPage} />\r\n          </Switch>\r\n        </Router>\r\n      </Socket>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/main.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/github.96f4c70d.svg\";"],"sourceRoot":""}